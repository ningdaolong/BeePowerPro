// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: fes.proto

package com.app.beepower;

public final class Fes {
  private Fes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PowerValueOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // optional bool switchOn = 1;
    boolean hasSwitchOn();
    boolean getSwitchOn();
    
    // optional float reserved = 2 [default = -999999.88];
    boolean hasReserved();
    float getReserved();
    
    // optional float p = 3 [default = -999999.88];
    boolean hasP();
    float getP();
    
    // optional float theta = 4 [default = -999999.88];
    boolean hasTheta();
    float getTheta();
    
    // optional float v = 5 [default = -999999.88];
    boolean hasV();
    float getV();
    
    // optional float i = 6 [default = -999999.88];
    boolean hasI();
    float getI();
    
    // optional float frequency = 7 [default = 0];
    boolean hasFrequency();
    float getFrequency();
    
    // optional float energy = 8 [default = -999999.88];
    boolean hasEnergy();
    float getEnergy();
    
    // optional .PowerValue.PhasorType phasorType = 14 [default = PHASOR_A];
    boolean hasPhasorType();
    com.app.beepower.Fes.PowerValue.PhasorType getPhasorType();
    
    // optional int64 t = 15 [default = 0];
    boolean hasT();
    long getT();
  }
  public static final class PowerValue extends
      com.google.protobuf.GeneratedMessage
      implements PowerValueOrBuilder {
    // Use PowerValue.newBuilder() to construct.
    private PowerValue(Builder builder) {
      super(builder);
    }
    private PowerValue(boolean noInit) {}
    
    private static final PowerValue defaultInstance;
    public static PowerValue getDefaultInstance() {
      return defaultInstance;
    }
    
    public PowerValue getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.app.beepower.Fes.internal_static_PowerValue_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.app.beepower.Fes.internal_static_PowerValue_fieldAccessorTable;
    }
    
    public enum PhasorType
        implements com.google.protobuf.ProtocolMessageEnum {
      PHASOR_A(0, 1),
      PHASOR_B(1, 2),
      PHASOR_AB(2, 3),
      PHASOR_C(3, 4),
      PHASOR_AC(4, 5),
      PHASOR_BC(5, 6),
      PHASOR_ABC(6, 7),
      ;
      
      public static final int PHASOR_A_VALUE = 1;
      public static final int PHASOR_B_VALUE = 2;
      public static final int PHASOR_AB_VALUE = 3;
      public static final int PHASOR_C_VALUE = 4;
      public static final int PHASOR_AC_VALUE = 5;
      public static final int PHASOR_BC_VALUE = 6;
      public static final int PHASOR_ABC_VALUE = 7;
      
      
      public final int getNumber() { return value; }
      
      public static PhasorType valueOf(int value) {
        switch (value) {
          case 1: return PHASOR_A;
          case 2: return PHASOR_B;
          case 3: return PHASOR_AB;
          case 4: return PHASOR_C;
          case 5: return PHASOR_AC;
          case 6: return PHASOR_BC;
          case 7: return PHASOR_ABC;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<PhasorType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<PhasorType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PhasorType>() {
              public PhasorType findValueByNumber(int number) {
                return PhasorType.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.app.beepower.Fes.PowerValue.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final PhasorType[] VALUES = {
        PHASOR_A, PHASOR_B, PHASOR_AB, PHASOR_C, PHASOR_AC, PHASOR_BC, PHASOR_ABC, 
      };
      
      public static PhasorType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private PhasorType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:PowerValue.PhasorType)
    }
    
    private int bitField0_;
    // optional bool switchOn = 1;
    public static final int SWITCHON_FIELD_NUMBER = 1;
    private boolean switchOn_;
    public boolean hasSwitchOn() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public boolean getSwitchOn() {
      return switchOn_;
    }
    
    // optional float reserved = 2 [default = -999999.88];
    public static final int RESERVED_FIELD_NUMBER = 2;
    private float reserved_;
    public boolean hasReserved() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public float getReserved() {
      return reserved_;
    }
    
    // optional float p = 3 [default = -999999.88];
    public static final int P_FIELD_NUMBER = 3;
    private float p_;
    public boolean hasP() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public float getP() {
      return p_;
    }
    
    // optional float theta = 4 [default = -999999.88];
    public static final int THETA_FIELD_NUMBER = 4;
    private float theta_;
    public boolean hasTheta() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public float getTheta() {
      return theta_;
    }
    
    // optional float v = 5 [default = -999999.88];
    public static final int V_FIELD_NUMBER = 5;
    private float v_;
    public boolean hasV() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public float getV() {
      return v_;
    }
    
    // optional float i = 6 [default = -999999.88];
    public static final int I_FIELD_NUMBER = 6;
    private float i_;
    public boolean hasI() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    public float getI() {
      return i_;
    }
    
    // optional float frequency = 7 [default = 0];
    public static final int FREQUENCY_FIELD_NUMBER = 7;
    private float frequency_;
    public boolean hasFrequency() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    public float getFrequency() {
      return frequency_;
    }
    
    // optional float energy = 8 [default = -999999.88];
    public static final int ENERGY_FIELD_NUMBER = 8;
    private float energy_;
    public boolean hasEnergy() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    public float getEnergy() {
      return energy_;
    }
    
    // optional .PowerValue.PhasorType phasorType = 14 [default = PHASOR_A];
    public static final int PHASORTYPE_FIELD_NUMBER = 14;
    private com.app.beepower.Fes.PowerValue.PhasorType phasorType_;
    public boolean hasPhasorType() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    public com.app.beepower.Fes.PowerValue.PhasorType getPhasorType() {
      return phasorType_;
    }
    
    // optional int64 t = 15 [default = 0];
    public static final int T_FIELD_NUMBER = 15;
    private long t_;
    public boolean hasT() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    public long getT() {
      return t_;
    }
    
    private void initFields() {
      switchOn_ = false;
      reserved_ = -999999.88F;
      p_ = -999999.88F;
      theta_ = -999999.88F;
      v_ = -999999.88F;
      i_ = -999999.88F;
      frequency_ = 0F;
      energy_ = -999999.88F;
      phasorType_ = com.app.beepower.Fes.PowerValue.PhasorType.PHASOR_A;
      t_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBool(1, switchOn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeFloat(2, reserved_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeFloat(3, p_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeFloat(4, theta_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeFloat(5, v_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeFloat(6, i_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeFloat(7, frequency_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeFloat(8, energy_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeEnum(14, phasorType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt64(15, t_);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(1, switchOn_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, reserved_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, p_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, theta_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, v_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, i_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, frequency_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, energy_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(14, phasorType_.getNumber());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(15, t_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.app.beepower.Fes.PowerValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.PowerValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.PowerValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.PowerValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.PowerValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.PowerValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.app.beepower.Fes.PowerValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.app.beepower.Fes.PowerValueOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.app.beepower.Fes.internal_static_PowerValue_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.app.beepower.Fes.internal_static_PowerValue_fieldAccessorTable;
      }
      
      // Construct using com.app.beepower.Fes.PowerValue.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        switchOn_ = false;
        bitField0_ = (bitField0_ & ~0x00000001);
        reserved_ = -999999.88F;
        bitField0_ = (bitField0_ & ~0x00000002);
        p_ = -999999.88F;
        bitField0_ = (bitField0_ & ~0x00000004);
        theta_ = -999999.88F;
        bitField0_ = (bitField0_ & ~0x00000008);
        v_ = -999999.88F;
        bitField0_ = (bitField0_ & ~0x00000010);
        i_ = -999999.88F;
        bitField0_ = (bitField0_ & ~0x00000020);
        frequency_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000040);
        energy_ = -999999.88F;
        bitField0_ = (bitField0_ & ~0x00000080);
        phasorType_ = com.app.beepower.Fes.PowerValue.PhasorType.PHASOR_A;
        bitField0_ = (bitField0_ & ~0x00000100);
        t_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.app.beepower.Fes.PowerValue.getDescriptor();
      }
      
      public com.app.beepower.Fes.PowerValue getDefaultInstanceForType() {
        return com.app.beepower.Fes.PowerValue.getDefaultInstance();
      }
      
      public com.app.beepower.Fes.PowerValue build() {
        com.app.beepower.Fes.PowerValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.app.beepower.Fes.PowerValue buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.app.beepower.Fes.PowerValue result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.app.beepower.Fes.PowerValue buildPartial() {
        com.app.beepower.Fes.PowerValue result = new com.app.beepower.Fes.PowerValue(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.switchOn_ = switchOn_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.reserved_ = reserved_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.p_ = p_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.theta_ = theta_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.v_ = v_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.i_ = i_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.frequency_ = frequency_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.energy_ = energy_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.phasorType_ = phasorType_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.t_ = t_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.app.beepower.Fes.PowerValue) {
          return mergeFrom((com.app.beepower.Fes.PowerValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.app.beepower.Fes.PowerValue other) {
        if (other == com.app.beepower.Fes.PowerValue.getDefaultInstance()) return this;
        if (other.hasSwitchOn()) {
          setSwitchOn(other.getSwitchOn());
        }
        if (other.hasReserved()) {
          setReserved(other.getReserved());
        }
        if (other.hasP()) {
          setP(other.getP());
        }
        if (other.hasTheta()) {
          setTheta(other.getTheta());
        }
        if (other.hasV()) {
          setV(other.getV());
        }
        if (other.hasI()) {
          setI(other.getI());
        }
        if (other.hasFrequency()) {
          setFrequency(other.getFrequency());
        }
        if (other.hasEnergy()) {
          setEnergy(other.getEnergy());
        }
        if (other.hasPhasorType()) {
          setPhasorType(other.getPhasorType());
        }
        if (other.hasT()) {
          setT(other.getT());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              switchOn_ = input.readBool();
              break;
            }
            case 21: {
              bitField0_ |= 0x00000002;
              reserved_ = input.readFloat();
              break;
            }
            case 29: {
              bitField0_ |= 0x00000004;
              p_ = input.readFloat();
              break;
            }
            case 37: {
              bitField0_ |= 0x00000008;
              theta_ = input.readFloat();
              break;
            }
            case 45: {
              bitField0_ |= 0x00000010;
              v_ = input.readFloat();
              break;
            }
            case 53: {
              bitField0_ |= 0x00000020;
              i_ = input.readFloat();
              break;
            }
            case 61: {
              bitField0_ |= 0x00000040;
              frequency_ = input.readFloat();
              break;
            }
            case 69: {
              bitField0_ |= 0x00000080;
              energy_ = input.readFloat();
              break;
            }
            case 112: {
              int rawValue = input.readEnum();
              com.app.beepower.Fes.PowerValue.PhasorType value = com.app.beepower.Fes.PowerValue.PhasorType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(14, rawValue);
              } else {
                bitField0_ |= 0x00000100;
                phasorType_ = value;
              }
              break;
            }
            case 120: {
              bitField0_ |= 0x00000200;
              t_ = input.readInt64();
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // optional bool switchOn = 1;
      private boolean switchOn_ ;
      public boolean hasSwitchOn() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public boolean getSwitchOn() {
        return switchOn_;
      }
      public Builder setSwitchOn(boolean value) {
        bitField0_ |= 0x00000001;
        switchOn_ = value;
        onChanged();
        return this;
      }
      public Builder clearSwitchOn() {
        bitField0_ = (bitField0_ & ~0x00000001);
        switchOn_ = false;
        onChanged();
        return this;
      }
      
      // optional float reserved = 2 [default = -999999.88];
      private float reserved_ = -999999.88F;
      public boolean hasReserved() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public float getReserved() {
        return reserved_;
      }
      public Builder setReserved(float value) {
        bitField0_ |= 0x00000002;
        reserved_ = value;
        onChanged();
        return this;
      }
      public Builder clearReserved() {
        bitField0_ = (bitField0_ & ~0x00000002);
        reserved_ = -999999.88F;
        onChanged();
        return this;
      }
      
      // optional float p = 3 [default = -999999.88];
      private float p_ = -999999.88F;
      public boolean hasP() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public float getP() {
        return p_;
      }
      public Builder setP(float value) {
        bitField0_ |= 0x00000004;
        p_ = value;
        onChanged();
        return this;
      }
      public Builder clearP() {
        bitField0_ = (bitField0_ & ~0x00000004);
        p_ = -999999.88F;
        onChanged();
        return this;
      }
      
      // optional float theta = 4 [default = -999999.88];
      private float theta_ = -999999.88F;
      public boolean hasTheta() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public float getTheta() {
        return theta_;
      }
      public Builder setTheta(float value) {
        bitField0_ |= 0x00000008;
        theta_ = value;
        onChanged();
        return this;
      }
      public Builder clearTheta() {
        bitField0_ = (bitField0_ & ~0x00000008);
        theta_ = -999999.88F;
        onChanged();
        return this;
      }
      
      // optional float v = 5 [default = -999999.88];
      private float v_ = -999999.88F;
      public boolean hasV() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public float getV() {
        return v_;
      }
      public Builder setV(float value) {
        bitField0_ |= 0x00000010;
        v_ = value;
        onChanged();
        return this;
      }
      public Builder clearV() {
        bitField0_ = (bitField0_ & ~0x00000010);
        v_ = -999999.88F;
        onChanged();
        return this;
      }
      
      // optional float i = 6 [default = -999999.88];
      private float i_ = -999999.88F;
      public boolean hasI() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      public float getI() {
        return i_;
      }
      public Builder setI(float value) {
        bitField0_ |= 0x00000020;
        i_ = value;
        onChanged();
        return this;
      }
      public Builder clearI() {
        bitField0_ = (bitField0_ & ~0x00000020);
        i_ = -999999.88F;
        onChanged();
        return this;
      }
      
      // optional float frequency = 7 [default = 0];
      private float frequency_ ;
      public boolean hasFrequency() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      public float getFrequency() {
        return frequency_;
      }
      public Builder setFrequency(float value) {
        bitField0_ |= 0x00000040;
        frequency_ = value;
        onChanged();
        return this;
      }
      public Builder clearFrequency() {
        bitField0_ = (bitField0_ & ~0x00000040);
        frequency_ = 0F;
        onChanged();
        return this;
      }
      
      // optional float energy = 8 [default = -999999.88];
      private float energy_ = -999999.88F;
      public boolean hasEnergy() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      public float getEnergy() {
        return energy_;
      }
      public Builder setEnergy(float value) {
        bitField0_ |= 0x00000080;
        energy_ = value;
        onChanged();
        return this;
      }
      public Builder clearEnergy() {
        bitField0_ = (bitField0_ & ~0x00000080);
        energy_ = -999999.88F;
        onChanged();
        return this;
      }
      
      // optional .PowerValue.PhasorType phasorType = 14 [default = PHASOR_A];
      private com.app.beepower.Fes.PowerValue.PhasorType phasorType_ = com.app.beepower.Fes.PowerValue.PhasorType.PHASOR_A;
      public boolean hasPhasorType() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      public com.app.beepower.Fes.PowerValue.PhasorType getPhasorType() {
        return phasorType_;
      }
      public Builder setPhasorType(com.app.beepower.Fes.PowerValue.PhasorType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000100;
        phasorType_ = value;
        onChanged();
        return this;
      }
      public Builder clearPhasorType() {
        bitField0_ = (bitField0_ & ~0x00000100);
        phasorType_ = com.app.beepower.Fes.PowerValue.PhasorType.PHASOR_A;
        onChanged();
        return this;
      }
      
      // optional int64 t = 15 [default = 0];
      private long t_ ;
      public boolean hasT() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      public long getT() {
        return t_;
      }
      public Builder setT(long value) {
        bitField0_ |= 0x00000200;
        t_ = value;
        onChanged();
        return this;
      }
      public Builder clearT() {
        bitField0_ = (bitField0_ & ~0x00000200);
        t_ = 0L;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:PowerValue)
    }
    
    static {
      defaultInstance = new PowerValue(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PowerValue)
  }
  
  public interface PowerValuesOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated .PowerValue m = 1;
    java.util.List<com.app.beepower.Fes.PowerValue> 
        getMList();
    com.app.beepower.Fes.PowerValue getM(int index);
    int getMCount();
    java.util.List<? extends com.app.beepower.Fes.PowerValueOrBuilder> 
        getMOrBuilderList();
    com.app.beepower.Fes.PowerValueOrBuilder getMOrBuilder(
        int index);
  }
  public static final class PowerValues extends
      com.google.protobuf.GeneratedMessage
      implements PowerValuesOrBuilder {
    // Use PowerValues.newBuilder() to construct.
    private PowerValues(Builder builder) {
      super(builder);
    }
    private PowerValues(boolean noInit) {}
    
    private static final PowerValues defaultInstance;
    public static PowerValues getDefaultInstance() {
      return defaultInstance;
    }
    
    public PowerValues getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.app.beepower.Fes.internal_static_PowerValues_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.app.beepower.Fes.internal_static_PowerValues_fieldAccessorTable;
    }
    
    // repeated .PowerValue m = 1;
    public static final int M_FIELD_NUMBER = 1;
    private java.util.List<com.app.beepower.Fes.PowerValue> m_;
    public java.util.List<com.app.beepower.Fes.PowerValue> getMList() {
      return m_;
    }
    public java.util.List<? extends com.app.beepower.Fes.PowerValueOrBuilder> 
        getMOrBuilderList() {
      return m_;
    }
    public int getMCount() {
      return m_.size();
    }
    public com.app.beepower.Fes.PowerValue getM(int index) {
      return m_.get(index);
    }
    public com.app.beepower.Fes.PowerValueOrBuilder getMOrBuilder(
        int index) {
      return m_.get(index);
    }
    
    private void initFields() {
      m_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < m_.size(); i++) {
        output.writeMessage(1, m_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (int i = 0; i < m_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, m_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.app.beepower.Fes.PowerValues parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValues parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.PowerValues parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValues parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.PowerValues parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValues parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.PowerValues parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.PowerValues parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.PowerValues parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.PowerValues parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.app.beepower.Fes.PowerValues prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.app.beepower.Fes.PowerValuesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.app.beepower.Fes.internal_static_PowerValues_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.app.beepower.Fes.internal_static_PowerValues_fieldAccessorTable;
      }
      
      // Construct using com.app.beepower.Fes.PowerValues.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        if (mBuilder_ == null) {
          m_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          mBuilder_.clear();
        }
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.app.beepower.Fes.PowerValues.getDescriptor();
      }
      
      public com.app.beepower.Fes.PowerValues getDefaultInstanceForType() {
        return com.app.beepower.Fes.PowerValues.getDefaultInstance();
      }
      
      public com.app.beepower.Fes.PowerValues build() {
        com.app.beepower.Fes.PowerValues result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.app.beepower.Fes.PowerValues buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.app.beepower.Fes.PowerValues result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.app.beepower.Fes.PowerValues buildPartial() {
        com.app.beepower.Fes.PowerValues result = new com.app.beepower.Fes.PowerValues(this);
        int from_bitField0_ = bitField0_;
        if (mBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            m_ = java.util.Collections.unmodifiableList(m_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.m_ = m_;
        } else {
          result.m_ = mBuilder_.build();
        }
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.app.beepower.Fes.PowerValues) {
          return mergeFrom((com.app.beepower.Fes.PowerValues)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.app.beepower.Fes.PowerValues other) {
        if (other == com.app.beepower.Fes.PowerValues.getDefaultInstance()) return this;
        if (mBuilder_ == null) {
          if (!other.m_.isEmpty()) {
            if (m_.isEmpty()) {
              m_ = other.m_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureMIsMutable();
              m_.addAll(other.m_);
            }
            onChanged();
          }
        } else {
          if (!other.m_.isEmpty()) {
            if (mBuilder_.isEmpty()) {
              mBuilder_.dispose();
              mBuilder_ = null;
              m_ = other.m_;
              bitField0_ = (bitField0_ & ~0x00000001);
              mBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMFieldBuilder() : null;
            } else {
              mBuilder_.addAllMessages(other.m_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              com.app.beepower.Fes.PowerValue.Builder subBuilder = com.app.beepower.Fes.PowerValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addM(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated .PowerValue m = 1;
      private java.util.List<com.app.beepower.Fes.PowerValue> m_ =
        java.util.Collections.emptyList();
      private void ensureMIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          m_ = new java.util.ArrayList<com.app.beepower.Fes.PowerValue>(m_);
          bitField0_ |= 0x00000001;
         }
      }
      
      private com.google.protobuf.RepeatedFieldBuilder<
          com.app.beepower.Fes.PowerValue, com.app.beepower.Fes.PowerValue.Builder, com.app.beepower.Fes.PowerValueOrBuilder> mBuilder_;
      
      public java.util.List<com.app.beepower.Fes.PowerValue> getMList() {
        if (mBuilder_ == null) {
          return java.util.Collections.unmodifiableList(m_);
        } else {
          return mBuilder_.getMessageList();
        }
      }
      public int getMCount() {
        if (mBuilder_ == null) {
          return m_.size();
        } else {
          return mBuilder_.getCount();
        }
      }
      public com.app.beepower.Fes.PowerValue getM(int index) {
        if (mBuilder_ == null) {
          return m_.get(index);
        } else {
          return mBuilder_.getMessage(index);
        }
      }
      public Builder setM(
          int index, com.app.beepower.Fes.PowerValue value) {
        if (mBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMIsMutable();
          m_.set(index, value);
          onChanged();
        } else {
          mBuilder_.setMessage(index, value);
        }
        return this;
      }
      public Builder setM(
          int index, com.app.beepower.Fes.PowerValue.Builder builderForValue) {
        if (mBuilder_ == null) {
          ensureMIsMutable();
          m_.set(index, builderForValue.build());
          onChanged();
        } else {
          mBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addM(com.app.beepower.Fes.PowerValue value) {
        if (mBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMIsMutable();
          m_.add(value);
          onChanged();
        } else {
          mBuilder_.addMessage(value);
        }
        return this;
      }
      public Builder addM(
          int index, com.app.beepower.Fes.PowerValue value) {
        if (mBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMIsMutable();
          m_.add(index, value);
          onChanged();
        } else {
          mBuilder_.addMessage(index, value);
        }
        return this;
      }
      public Builder addM(
          com.app.beepower.Fes.PowerValue.Builder builderForValue) {
        if (mBuilder_ == null) {
          ensureMIsMutable();
          m_.add(builderForValue.build());
          onChanged();
        } else {
          mBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      public Builder addM(
          int index, com.app.beepower.Fes.PowerValue.Builder builderForValue) {
        if (mBuilder_ == null) {
          ensureMIsMutable();
          m_.add(index, builderForValue.build());
          onChanged();
        } else {
          mBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      public Builder addAllM(
          java.lang.Iterable<? extends com.app.beepower.Fes.PowerValue> values) {
        if (mBuilder_ == null) {
          ensureMIsMutable();
          super.addAll(values, m_);
          onChanged();
        } else {
          mBuilder_.addAllMessages(values);
        }
        return this;
      }
      public Builder clearM() {
        if (mBuilder_ == null) {
          m_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          mBuilder_.clear();
        }
        return this;
      }
      public Builder removeM(int index) {
        if (mBuilder_ == null) {
          ensureMIsMutable();
          m_.remove(index);
          onChanged();
        } else {
          mBuilder_.remove(index);
        }
        return this;
      }
      public com.app.beepower.Fes.PowerValue.Builder getMBuilder(
          int index) {
        return getMFieldBuilder().getBuilder(index);
      }
      public com.app.beepower.Fes.PowerValueOrBuilder getMOrBuilder(
          int index) {
        if (mBuilder_ == null) {
          return m_.get(index);  } else {
          return mBuilder_.getMessageOrBuilder(index);
        }
      }
      public java.util.List<? extends com.app.beepower.Fes.PowerValueOrBuilder> 
           getMOrBuilderList() {
        if (mBuilder_ != null) {
          return mBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(m_);
        }
      }
      public com.app.beepower.Fes.PowerValue.Builder addMBuilder() {
        return getMFieldBuilder().addBuilder(
            com.app.beepower.Fes.PowerValue.getDefaultInstance());
      }
      public com.app.beepower.Fes.PowerValue.Builder addMBuilder(
          int index) {
        return getMFieldBuilder().addBuilder(
            index, com.app.beepower.Fes.PowerValue.getDefaultInstance());
      }
      public java.util.List<com.app.beepower.Fes.PowerValue.Builder> 
           getMBuilderList() {
        return getMFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.app.beepower.Fes.PowerValue, com.app.beepower.Fes.PowerValue.Builder, com.app.beepower.Fes.PowerValueOrBuilder> 
          getMFieldBuilder() {
        if (mBuilder_ == null) {
          mBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.app.beepower.Fes.PowerValue, com.app.beepower.Fes.PowerValue.Builder, com.app.beepower.Fes.PowerValueOrBuilder>(
                  m_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          m_ = null;
        }
        return mBuilder_;
      }
      
      // @@protoc_insertion_point(builder_scope:PowerValues)
    }
    
    static {
      defaultInstance = new PowerValues(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:PowerValues)
  }
  
  public interface TerminalIdsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // repeated string powerSocketIds = 1;
    java.util.List<String> getPowerSocketIdsList();
    int getPowerSocketIdsCount();
    String getPowerSocketIds(int index);
    
    // repeated string infraredControllerIds = 2;
    java.util.List<String> getInfraredControllerIdsList();
    int getInfraredControllerIdsCount();
    String getInfraredControllerIds(int index);
    
    // repeated int32 socketStatus = 3;
    java.util.List<java.lang.Integer> getSocketStatusList();
    int getSocketStatusCount();
    int getSocketStatus(int index);
  }
  public static final class TerminalIds extends
      com.google.protobuf.GeneratedMessage
      implements TerminalIdsOrBuilder {
    // Use TerminalIds.newBuilder() to construct.
    private TerminalIds(Builder builder) {
      super(builder);
    }
    private TerminalIds(boolean noInit) {}
    
    private static final TerminalIds defaultInstance;
    public static TerminalIds getDefaultInstance() {
      return defaultInstance;
    }
    
    public TerminalIds getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.app.beepower.Fes.internal_static_TerminalIds_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.app.beepower.Fes.internal_static_TerminalIds_fieldAccessorTable;
    }
    
    // repeated string powerSocketIds = 1;
    public static final int POWERSOCKETIDS_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList powerSocketIds_;
    public java.util.List<String>
        getPowerSocketIdsList() {
      return powerSocketIds_;
    }
    public int getPowerSocketIdsCount() {
      return powerSocketIds_.size();
    }
    public String getPowerSocketIds(int index) {
      return powerSocketIds_.get(index);
    }
    
    // repeated string infraredControllerIds = 2;
    public static final int INFRAREDCONTROLLERIDS_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList infraredControllerIds_;
    public java.util.List<String>
        getInfraredControllerIdsList() {
      return infraredControllerIds_;
    }
    public int getInfraredControllerIdsCount() {
      return infraredControllerIds_.size();
    }
    public String getInfraredControllerIds(int index) {
      return infraredControllerIds_.get(index);
    }
    
    // repeated int32 socketStatus = 3;
    public static final int SOCKETSTATUS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> socketStatus_;
    public java.util.List<java.lang.Integer>
        getSocketStatusList() {
      return socketStatus_;
    }
    public int getSocketStatusCount() {
      return socketStatus_.size();
    }
    public int getSocketStatus(int index) {
      return socketStatus_.get(index);
    }
    
    private void initFields() {
      powerSocketIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      infraredControllerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      socketStatus_ = java.util.Collections.emptyList();;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < powerSocketIds_.size(); i++) {
        output.writeBytes(1, powerSocketIds_.getByteString(i));
      }
      for (int i = 0; i < infraredControllerIds_.size(); i++) {
        output.writeBytes(2, infraredControllerIds_.getByteString(i));
      }
      for (int i = 0; i < socketStatus_.size(); i++) {
        output.writeInt32(3, socketStatus_.get(i));
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < powerSocketIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(powerSocketIds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getPowerSocketIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < infraredControllerIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(infraredControllerIds_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getInfraredControllerIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < socketStatus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(socketStatus_.get(i));
        }
        size += dataSize;
        size += 1 * getSocketStatusList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.app.beepower.Fes.TerminalIds parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.TerminalIds parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.TerminalIds parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.TerminalIds parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.TerminalIds parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.TerminalIds parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.TerminalIds parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.TerminalIds parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.TerminalIds parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.TerminalIds parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.app.beepower.Fes.TerminalIds prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.app.beepower.Fes.TerminalIdsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.app.beepower.Fes.internal_static_TerminalIds_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.app.beepower.Fes.internal_static_TerminalIds_fieldAccessorTable;
      }
      
      // Construct using com.app.beepower.Fes.TerminalIds.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        powerSocketIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        infraredControllerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        socketStatus_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.app.beepower.Fes.TerminalIds.getDescriptor();
      }
      
      public com.app.beepower.Fes.TerminalIds getDefaultInstanceForType() {
        return com.app.beepower.Fes.TerminalIds.getDefaultInstance();
      }
      
      public com.app.beepower.Fes.TerminalIds build() {
        com.app.beepower.Fes.TerminalIds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.app.beepower.Fes.TerminalIds buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.app.beepower.Fes.TerminalIds result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.app.beepower.Fes.TerminalIds buildPartial() {
        com.app.beepower.Fes.TerminalIds result = new com.app.beepower.Fes.TerminalIds(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          powerSocketIds_ = new com.google.protobuf.UnmodifiableLazyStringList(
              powerSocketIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.powerSocketIds_ = powerSocketIds_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          infraredControllerIds_ = new com.google.protobuf.UnmodifiableLazyStringList(
              infraredControllerIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.infraredControllerIds_ = infraredControllerIds_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          socketStatus_ = java.util.Collections.unmodifiableList(socketStatus_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.socketStatus_ = socketStatus_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.app.beepower.Fes.TerminalIds) {
          return mergeFrom((com.app.beepower.Fes.TerminalIds)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.app.beepower.Fes.TerminalIds other) {
        if (other == com.app.beepower.Fes.TerminalIds.getDefaultInstance()) return this;
        if (!other.powerSocketIds_.isEmpty()) {
          if (powerSocketIds_.isEmpty()) {
            powerSocketIds_ = other.powerSocketIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensurePowerSocketIdsIsMutable();
            powerSocketIds_.addAll(other.powerSocketIds_);
          }
          onChanged();
        }
        if (!other.infraredControllerIds_.isEmpty()) {
          if (infraredControllerIds_.isEmpty()) {
            infraredControllerIds_ = other.infraredControllerIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureInfraredControllerIdsIsMutable();
            infraredControllerIds_.addAll(other.infraredControllerIds_);
          }
          onChanged();
        }
        if (!other.socketStatus_.isEmpty()) {
          if (socketStatus_.isEmpty()) {
            socketStatus_ = other.socketStatus_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureSocketStatusIsMutable();
            socketStatus_.addAll(other.socketStatus_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              ensurePowerSocketIdsIsMutable();
              powerSocketIds_.add(input.readBytes());
              break;
            }
            case 18: {
              ensureInfraredControllerIdsIsMutable();
              infraredControllerIds_.add(input.readBytes());
              break;
            }
            case 24: {
              ensureSocketStatusIsMutable();
              socketStatus_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addSocketStatus(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // repeated string powerSocketIds = 1;
      private com.google.protobuf.LazyStringList powerSocketIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePowerSocketIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          powerSocketIds_ = new com.google.protobuf.LazyStringArrayList(powerSocketIds_);
          bitField0_ |= 0x00000001;
         }
      }
      public java.util.List<String>
          getPowerSocketIdsList() {
        return java.util.Collections.unmodifiableList(powerSocketIds_);
      }
      public int getPowerSocketIdsCount() {
        return powerSocketIds_.size();
      }
      public String getPowerSocketIds(int index) {
        return powerSocketIds_.get(index);
      }
      public Builder setPowerSocketIds(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePowerSocketIdsIsMutable();
        powerSocketIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addPowerSocketIds(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePowerSocketIdsIsMutable();
        powerSocketIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllPowerSocketIds(
          java.lang.Iterable<String> values) {
        ensurePowerSocketIdsIsMutable();
        super.addAll(values, powerSocketIds_);
        onChanged();
        return this;
      }
      public Builder clearPowerSocketIds() {
        powerSocketIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      void addPowerSocketIds(com.google.protobuf.ByteString value) {
        ensurePowerSocketIdsIsMutable();
        powerSocketIds_.add(value);
        onChanged();
      }
      
      // repeated string infraredControllerIds = 2;
      private com.google.protobuf.LazyStringList infraredControllerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureInfraredControllerIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          infraredControllerIds_ = new com.google.protobuf.LazyStringArrayList(infraredControllerIds_);
          bitField0_ |= 0x00000002;
         }
      }
      public java.util.List<String>
          getInfraredControllerIdsList() {
        return java.util.Collections.unmodifiableList(infraredControllerIds_);
      }
      public int getInfraredControllerIdsCount() {
        return infraredControllerIds_.size();
      }
      public String getInfraredControllerIds(int index) {
        return infraredControllerIds_.get(index);
      }
      public Builder setInfraredControllerIds(
          int index, String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfraredControllerIdsIsMutable();
        infraredControllerIds_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addInfraredControllerIds(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureInfraredControllerIdsIsMutable();
        infraredControllerIds_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllInfraredControllerIds(
          java.lang.Iterable<String> values) {
        ensureInfraredControllerIdsIsMutable();
        super.addAll(values, infraredControllerIds_);
        onChanged();
        return this;
      }
      public Builder clearInfraredControllerIds() {
        infraredControllerIds_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      void addInfraredControllerIds(com.google.protobuf.ByteString value) {
        ensureInfraredControllerIdsIsMutable();
        infraredControllerIds_.add(value);
        onChanged();
      }
      
      // repeated int32 socketStatus = 3;
      private java.util.List<java.lang.Integer> socketStatus_ = java.util.Collections.emptyList();;
      private void ensureSocketStatusIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          socketStatus_ = new java.util.ArrayList<java.lang.Integer>(socketStatus_);
          bitField0_ |= 0x00000004;
         }
      }
      public java.util.List<java.lang.Integer>
          getSocketStatusList() {
        return java.util.Collections.unmodifiableList(socketStatus_);
      }
      public int getSocketStatusCount() {
        return socketStatus_.size();
      }
      public int getSocketStatus(int index) {
        return socketStatus_.get(index);
      }
      public Builder setSocketStatus(
          int index, int value) {
        ensureSocketStatusIsMutable();
        socketStatus_.set(index, value);
        onChanged();
        return this;
      }
      public Builder addSocketStatus(int value) {
        ensureSocketStatusIsMutable();
        socketStatus_.add(value);
        onChanged();
        return this;
      }
      public Builder addAllSocketStatus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSocketStatusIsMutable();
        super.addAll(values, socketStatus_);
        onChanged();
        return this;
      }
      public Builder clearSocketStatus() {
        socketStatus_ = java.util.Collections.emptyList();;
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:TerminalIds)
    }
    
    static {
      defaultInstance = new TerminalIds(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:TerminalIds)
  }
  
  public interface SckControlBackOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
    
    // required string clientId = 1;
    boolean hasClientId();
    String getClientId();
    
    // required int32 msgId = 2;
    boolean hasMsgId();
    int getMsgId();
    
    // required int32 ctrlFlag = 3;
    boolean hasCtrlFlag();
    int getCtrlFlag();
    
    // required bool result = 4;
    boolean hasResult();
    boolean getResult();
    
    // optional .SckControlBack.FailureCode code = 5;
    boolean hasCode();
    com.app.beepower.Fes.SckControlBack.FailureCode getCode();
  }
  public static final class SckControlBack extends
      com.google.protobuf.GeneratedMessage
      implements SckControlBackOrBuilder {
    // Use SckControlBack.newBuilder() to construct.
    private SckControlBack(Builder builder) {
      super(builder);
    }
    private SckControlBack(boolean noInit) {}
    
    private static final SckControlBack defaultInstance;
    public static SckControlBack getDefaultInstance() {
      return defaultInstance;
    }
    
    public SckControlBack getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.app.beepower.Fes.internal_static_SckControlBack_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.app.beepower.Fes.internal_static_SckControlBack_fieldAccessorTable;
    }
    
    public enum FailureCode
        implements com.google.protobuf.ProtocolMessageEnum {
      TIMEOUT(0, 1),
      SCK_REJECT(1, 2),
      PERMISSION_DENIED(2, 3),
      ;
      
      public static final int TIMEOUT_VALUE = 1;
      public static final int SCK_REJECT_VALUE = 2;
      public static final int PERMISSION_DENIED_VALUE = 3;
      
      
      public final int getNumber() { return value; }
      
      public static FailureCode valueOf(int value) {
        switch (value) {
          case 1: return TIMEOUT;
          case 2: return SCK_REJECT;
          case 3: return PERMISSION_DENIED;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<FailureCode>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<FailureCode>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<FailureCode>() {
              public FailureCode findValueByNumber(int number) {
                return FailureCode.valueOf(number);
              }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.app.beepower.Fes.SckControlBack.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final FailureCode[] VALUES = {
        TIMEOUT, SCK_REJECT, PERMISSION_DENIED, 
      };
      
      public static FailureCode valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      
      private final int index;
      private final int value;
      
      private FailureCode(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      // @@protoc_insertion_point(enum_scope:SckControlBack.FailureCode)
    }
    
    private int bitField0_;
    // required string clientId = 1;
    public static final int CLIENTID_FIELD_NUMBER = 1;
    private java.lang.Object clientId_;
    public boolean hasClientId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    public String getClientId() {
      java.lang.Object ref = clientId_;
      if (ref instanceof String) {
        return (String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        if (com.google.protobuf.Internal.isValidUtf8(bs)) {
          clientId_ = s;
        }
        return s;
      }
    }
    private com.google.protobuf.ByteString getClientIdBytes() {
      java.lang.Object ref = clientId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8((String) ref);
        clientId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    
    // required int32 msgId = 2;
    public static final int MSGID_FIELD_NUMBER = 2;
    private int msgId_;
    public boolean hasMsgId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    public int getMsgId() {
      return msgId_;
    }
    
    // required int32 ctrlFlag = 3;
    public static final int CTRLFLAG_FIELD_NUMBER = 3;
    private int ctrlFlag_;
    public boolean hasCtrlFlag() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    public int getCtrlFlag() {
      return ctrlFlag_;
    }
    
    // required bool result = 4;
    public static final int RESULT_FIELD_NUMBER = 4;
    private boolean result_;
    public boolean hasResult() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    public boolean getResult() {
      return result_;
    }
    
    // optional .SckControlBack.FailureCode code = 5;
    public static final int CODE_FIELD_NUMBER = 5;
    private com.app.beepower.Fes.SckControlBack.FailureCode code_;
    public boolean hasCode() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    public com.app.beepower.Fes.SckControlBack.FailureCode getCode() {
      return code_;
    }
    
    private void initFields() {
      clientId_ = "";
      msgId_ = 0;
      ctrlFlag_ = 0;
      result_ = false;
      code_ = com.app.beepower.Fes.SckControlBack.FailureCode.TIMEOUT;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;
      
      if (!hasClientId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasMsgId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasCtrlFlag()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasResult()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getClientIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, msgId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, ctrlFlag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBool(4, result_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, code_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getClientIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, msgId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, ctrlFlag_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(4, result_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, code_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }
    
    public static com.app.beepower.Fes.SckControlBack parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.SckControlBack parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.SckControlBack parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.app.beepower.Fes.SckControlBack parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.SckControlBack parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.SckControlBack parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.app.beepower.Fes.SckControlBack parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.SckControlBack parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.app.beepower.Fes.SckControlBack parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.app.beepower.Fes.SckControlBack parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.app.beepower.Fes.SckControlBack prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.app.beepower.Fes.SckControlBackOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.app.beepower.Fes.internal_static_SckControlBack_descriptor;
      }
      
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.app.beepower.Fes.internal_static_SckControlBack_fieldAccessorTable;
      }
      
      // Construct using com.app.beepower.Fes.SckControlBack.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }
      
      private Builder(BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }
      
      public Builder clear() {
        super.clear();
        clientId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        msgId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        ctrlFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        result_ = false;
        bitField0_ = (bitField0_ & ~0x00000008);
        code_ = com.app.beepower.Fes.SckControlBack.FailureCode.TIMEOUT;
        bitField0_ = (bitField0_ & ~0x00000010);
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.app.beepower.Fes.SckControlBack.getDescriptor();
      }
      
      public com.app.beepower.Fes.SckControlBack getDefaultInstanceForType() {
        return com.app.beepower.Fes.SckControlBack.getDefaultInstance();
      }
      
      public com.app.beepower.Fes.SckControlBack build() {
        com.app.beepower.Fes.SckControlBack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }
      
      private com.app.beepower.Fes.SckControlBack buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        com.app.beepower.Fes.SckControlBack result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return result;
      }
      
      public com.app.beepower.Fes.SckControlBack buildPartial() {
        com.app.beepower.Fes.SckControlBack result = new com.app.beepower.Fes.SckControlBack(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.clientId_ = clientId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.msgId_ = msgId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.ctrlFlag_ = ctrlFlag_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.result_ = result_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.code_ = code_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.app.beepower.Fes.SckControlBack) {
          return mergeFrom((com.app.beepower.Fes.SckControlBack)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.app.beepower.Fes.SckControlBack other) {
        if (other == com.app.beepower.Fes.SckControlBack.getDefaultInstance()) return this;
        if (other.hasClientId()) {
          setClientId(other.getClientId());
        }
        if (other.hasMsgId()) {
          setMsgId(other.getMsgId());
        }
        if (other.hasCtrlFlag()) {
          setCtrlFlag(other.getCtrlFlag());
        }
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasCode()) {
          setCode(other.getCode());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public final boolean isInitialized() {
        if (!hasClientId()) {
          
          return false;
        }
        if (!hasMsgId()) {
          
          return false;
        }
        if (!hasCtrlFlag()) {
          
          return false;
        }
        if (!hasResult()) {
          
          return false;
        }
        return true;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              onChanged();
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                onChanged();
                return this;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              clientId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              msgId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              ctrlFlag_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              result_ = input.readBool();
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              com.app.beepower.Fes.SckControlBack.FailureCode value = com.app.beepower.Fes.SckControlBack.FailureCode.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                code_ = value;
              }
              break;
            }
          }
        }
      }
      
      private int bitField0_;
      
      // required string clientId = 1;
      private java.lang.Object clientId_ = "";
      public boolean hasClientId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      public String getClientId() {
        java.lang.Object ref = clientId_;
        if (!(ref instanceof String)) {
          String s = ((com.google.protobuf.ByteString) ref).toStringUtf8();
          clientId_ = s;
          return s;
        } else {
          return (String) ref;
        }
      }
      public Builder setClientId(String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
        return this;
      }
      public Builder clearClientId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        clientId_ = getDefaultInstance().getClientId();
        onChanged();
        return this;
      }
      void setClientId(com.google.protobuf.ByteString value) {
        bitField0_ |= 0x00000001;
        clientId_ = value;
        onChanged();
      }
      
      // required int32 msgId = 2;
      private int msgId_ ;
      public boolean hasMsgId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      public int getMsgId() {
        return msgId_;
      }
      public Builder setMsgId(int value) {
        bitField0_ |= 0x00000002;
        msgId_ = value;
        onChanged();
        return this;
      }
      public Builder clearMsgId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        msgId_ = 0;
        onChanged();
        return this;
      }
      
      // required int32 ctrlFlag = 3;
      private int ctrlFlag_ ;
      public boolean hasCtrlFlag() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      public int getCtrlFlag() {
        return ctrlFlag_;
      }
      public Builder setCtrlFlag(int value) {
        bitField0_ |= 0x00000004;
        ctrlFlag_ = value;
        onChanged();
        return this;
      }
      public Builder clearCtrlFlag() {
        bitField0_ = (bitField0_ & ~0x00000004);
        ctrlFlag_ = 0;
        onChanged();
        return this;
      }
      
      // required bool result = 4;
      private boolean result_ ;
      public boolean hasResult() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      public boolean getResult() {
        return result_;
      }
      public Builder setResult(boolean value) {
        bitField0_ |= 0x00000008;
        result_ = value;
        onChanged();
        return this;
      }
      public Builder clearResult() {
        bitField0_ = (bitField0_ & ~0x00000008);
        result_ = false;
        onChanged();
        return this;
      }
      
      // optional .SckControlBack.FailureCode code = 5;
      private com.app.beepower.Fes.SckControlBack.FailureCode code_ = com.app.beepower.Fes.SckControlBack.FailureCode.TIMEOUT;
      public boolean hasCode() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      public com.app.beepower.Fes.SckControlBack.FailureCode getCode() {
        return code_;
      }
      public Builder setCode(com.app.beepower.Fes.SckControlBack.FailureCode value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        code_ = value;
        onChanged();
        return this;
      }
      public Builder clearCode() {
        bitField0_ = (bitField0_ & ~0x00000010);
        code_ = com.app.beepower.Fes.SckControlBack.FailureCode.TIMEOUT;
        onChanged();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:SckControlBack)
    }
    
    static {
      defaultInstance = new SckControlBack(true);
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:SckControlBack)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PowerValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PowerValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_PowerValues_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_PowerValues_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_TerminalIds_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_TerminalIds_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_SckControlBack_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_SckControlBack_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\tfes.proto\"\207\003\n\nPowerValue\022\020\n\010switchOn\030\001" +
      " \001(\010\022\034\n\010reserved\030\002 \001(\002:\n-999999.88\022\025\n\001p\030" +
      "\003 \001(\002:\n-999999.88\022\031\n\005theta\030\004 \001(\002:\n-99999" +
      "9.88\022\025\n\001v\030\005 \001(\002:\n-999999.88\022\025\n\001i\030\006 \001(\002:\n" +
      "-999999.88\022\024\n\tfrequency\030\007 \001(\002:\0010\022\032\n\006ener" +
      "gy\030\010 \001(\002:\n-999999.88\0224\n\nphasorType\030\016 \001(\016" +
      "2\026.PowerValue.PhasorType:\010PHASOR_A\022\014\n\001t\030" +
      "\017 \001(\003:\0010\"s\n\nPhasorType\022\014\n\010PHASOR_A\020\001\022\014\n\010" +
      "PHASOR_B\020\002\022\r\n\tPHASOR_AB\020\003\022\014\n\010PHASOR_C\020\004\022" +
      "\r\n\tPHASOR_AC\020\005\022\r\n\tPHASOR_BC\020\006\022\016\n\nPHASOR_",
      "ABC\020\007\"%\n\013PowerValues\022\026\n\001m\030\001 \003(\0132\013.PowerV" +
      "alue\"Z\n\013TerminalIds\022\026\n\016powerSocketIds\030\001 " +
      "\003(\t\022\035\n\025infraredControllerIds\030\002 \003(\t\022\024\n\014so" +
      "cketStatus\030\003 \003(\005\"\301\001\n\016SckControlBack\022\020\n\010c" +
      "lientId\030\001 \002(\t\022\r\n\005msgId\030\002 \002(\005\022\020\n\010ctrlFlag" +
      "\030\003 \002(\005\022\016\n\006result\030\004 \002(\010\022)\n\004code\030\005 \001(\0162\033.S" +
      "ckControlBack.FailureCode\"A\n\013FailureCode" +
      "\022\013\n\007TIMEOUT\020\001\022\016\n\nSCK_REJECT\020\002\022\025\n\021PERMISS" +
      "ION_DENIED\020\003B\022\n\020com.app.beepower"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_PowerValue_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_PowerValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PowerValue_descriptor,
              new java.lang.String[] { "SwitchOn", "Reserved", "P", "Theta", "V", "I", "Frequency", "Energy", "PhasorType", "T", },
              com.app.beepower.Fes.PowerValue.class,
              com.app.beepower.Fes.PowerValue.Builder.class);
          internal_static_PowerValues_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_PowerValues_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_PowerValues_descriptor,
              new java.lang.String[] { "M", },
              com.app.beepower.Fes.PowerValues.class,
              com.app.beepower.Fes.PowerValues.Builder.class);
          internal_static_TerminalIds_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_TerminalIds_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_TerminalIds_descriptor,
              new java.lang.String[] { "PowerSocketIds", "InfraredControllerIds", "SocketStatus", },
              com.app.beepower.Fes.TerminalIds.class,
              com.app.beepower.Fes.TerminalIds.Builder.class);
          internal_static_SckControlBack_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_SckControlBack_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_SckControlBack_descriptor,
              new java.lang.String[] { "ClientId", "MsgId", "CtrlFlag", "Result", "Code", },
              com.app.beepower.Fes.SckControlBack.class,
              com.app.beepower.Fes.SckControlBack.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  // @@protoc_insertion_point(outer_class_scope)
}
